using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Ebda3Soft.Core.Database.Interfaces;
using Ebda3Soft.Core.Database;
using DevExpress.XtraBars.Docking2010.Customization;
using Ebda3Soft.Core.Enums;
using Ebda3Soft.Core.Database.Entities.GeneralSettings;
using Ebda3Soft.Core;
using Ebda3Soft.Core.Models;

namespace Ebda3Soft.Views.UserControls.GeneralSettings
{
    public partial class UserView : DevExpress.XtraEditors.XtraUserControl, IEntityControl
    {
        private SQLServerDbContext dbContext;
        private TransactionType transactionType;
        public BaseEntity BaseEntity { get; set; }
        private bool isFirstTime;

        //public UserView()
        //{
        //    InitializeComponent();
        //    // This line of code is generated by Data Source Configuration Wizard
        //    // Instantiate a new DBContext
        //    dbContext = new SQLServerDbContext();
        //    // Call the Load method to get the data for the given DbSet from the database.
        //    dbContext.Users.LoadAsync().ContinueWith(loadTask =>
        //    {
        //        // Bind data to control when loading complete
        //        bindingSource.DataSource = dbContext.Users.Local.ToBindingList();
        //        this.transactionType = TransactionType.Adding;
        //        isFirstTime = true;
        //        if (this.transactionType == TransactionType.Adding)
        //        {
        //            New();
        //        }
        //    }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        //    //this.bindingSource.Position;

        //}
        public UserView(BindingSource bindingSource, TransactionType transactionType,bool isFirstTime = false)
        {
            InitializeComponent();
            SharedView.SetTranslate(dataLayoutControl1);
            SharedView.SetTranslate(IsAdminCheckEdit);
            SharedView.SetTranslate(IsSuperAdminCheckEdit);
            dbContext = new SQLServerDbContext();

            this.bindingSource.DataSource = bindingSource;
            this.bindingSource.Position = bindingSource.Position;
            this.transactionType = transactionType;
            this.isFirstTime = isFirstTime;
            BaseEntity = bindingSource.Current as BaseEntity;
            if (BaseEntity != null)
            {
                InitBaseEntity();
            }
            if (this.transactionType == TransactionType.Adding)
            {
                if (BaseEntity == null)
                {
                    bindingSource.AddNew();
                    BaseEntity = bindingSource.Current as BaseEntity;
                    BaseEntity_InitNew(BaseEntity);
                    InitBaseEntity();
                }
                else
                {
                    BaseEntity.New();
                    //InitBaseEntity();
                }
            }
            else
            {
                ConfirmPasswordEditText.ReadOnly
                    = PlainTextTextEdit.ReadOnly
                    = true;
                itemForPasswordHint.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
            }
            dataLayoutControl1.DataSource = BaseEntity.BindingSource;
        }

        public void InitBaseEntity()
        {
            BaseEntity.Validation = null;
            BaseEntity.Validation += dataLayoutControl1.Validate;
            BaseEntity.BindingSource = new BindingSource();
            BaseEntity.BindingSource = bindingSource;
            BaseEntity.TransactionType = transactionType;
            BaseEntity.InitNew += BaseEntity_InitNew;
            BaseEntity.BeforeSave += (e) => FullNameTextEdit.Focus();
        }

        private void BaseEntity_InitNew(BaseEntity obj)
        {
            if (isFirstTime)
            {
                (obj as User).FullName = "Super Admin";
                (obj as User).IsSuperAdmin = true;
                (obj as User).IsEnabled = true;
                SharedView.User = obj as User;
                isFirstTime = false;
            }
            else
            {
                (obj as User).IsSuperAdmin = false;
                (obj as User).IsEnabled = true;

            }
            (obj as User).UserViews = new UserViewInfoDefaultList(); 
        }
        private void UserView_Load(object sender, EventArgs e)
        {
            repositoryItemCheckedComboBoxEdit1.Items.AddEnum<TransactionType>();
            repositoryItemCheckedComboBoxEdit1.SetFlags(typeof(TransactionType));

        }


        private void IsSuperAdminCheckEdit_CheckedChanged(object sender, EventArgs e)
        {
            ItemForUserViews.Enabled
                = ItemForIsAdmin.Enabled
                = !IsSuperAdminCheckEdit.Checked;
        }

        private void PlainTextTextEdit_DoubleClick(object sender, EventArgs e)
        {
            if (transactionType == TransactionType.Modifying)
            {
                ConfirmPasswordEditText.ReadOnly
                   = PlainTextTextEdit.ReadOnly
                   = !ConfirmPasswordEditText.ReadOnly;

                if(ConfirmPasswordEditText.ReadOnly)
                {
                    itemForPasswordHint.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always;
                }
                else
                {
                    itemForPasswordHint.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never;
                }
            }
        }
    }
}
