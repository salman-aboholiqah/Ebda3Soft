using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using Ebda3Soft.Core.Database;
using Ebda3Soft.Core.Enums;
using Ebda3Soft.Core.Database.Entities.Financial;

namespace Ebda3Soft.Views.UserControls.Financial
{
    public partial class JournalView : XtraUserControl, IEntityControl
    {
        private SQLServerDbContext dbContext;
        private readonly BindingSource bindingSource1;
        private TransactionType transactionType;
        private readonly JournalFormView journalFormView;

        public BaseEntity BaseEntity { get; set; }
        public JournalView(BindingSource bindingSource, TransactionType transactionType, JournalFormView journalFormView)
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            dbContext = SQLServerDbContext.Instance;
            // Call the Load method to get the data for the given DbSet from the database.
            this.bindingSource.DataSource = bindingSource;
            this.bindingSource.Position = bindingSource.Position;
            bindingSource1 = bindingSource;
            this.transactionType = transactionType;
            this.journalFormView = journalFormView;
            BaseEntity = bindingSource.Current as BaseEntity;
            //BaseEntity.DataLayoutControl = dataLayoutControl1;
            if (BaseEntity != null)
            {
                InitBaseEntity();
            }
            if (this.transactionType == TransactionType.Adding)
            {
                if (BaseEntity == null)
                {
                    bindingSource.AddNew();
                    BaseEntity = bindingSource.Current as BaseEntity;
                    InitBaseEntity();
                }
                else
                {
                    BaseEntity.New();
                    //InitBaseEntity();
                }
            }
            else
            {
                var journal = BaseEntity as Journal;
                var debitAccount = journal.JournalDetails.FirstOrDefault(a => a.Direction == JournalDetailDirection.Debit);
                var creditAccount = journal.JournalDetails.FirstOrDefault(a => a.Direction == JournalDetailDirection.Credit);

                DebitAccountGridLookupEdit.EditValue = debitAccount?.AccountID;
                CreditAccountGridLookupEdit.EditValue = creditAccount?.AccountID;
            }
            journalTypeGridLookUpEdit1.Properties.DataSource = new BindingSource(dbContext.JournalTypes.Where(a => a.JournalForm == journalFormView).ToList(), "");
            dataLayoutControl1.DataSource = BaseEntity.BindingSource;
            CaptionLabel.Text = journalFormView.ToString();

            switch (journalFormView)
            {
                case JournalFormView.SimpleJournal:
                    break;
                case JournalFormView.Recetip:
                    itemForDebitAccount.Text = "Cash account";
                    CreditAccountGridLookupEdit.BackColor = Color.Transparent;
                    CreditAccountGridLookupEdit.ForeColor = DevExpress.LookAndFeel.DXSkinColors.ForeColors.WindowText;
                    break;
                case JournalFormView.Payment:
                    DebitAccountGridLookupEdit.BackColor = Color.Transparent;
                    DebitAccountGridLookupEdit.ForeColor = DevExpress.LookAndFeel.DXSkinColors.ForeColors.WindowText;
                    itemForCreditAccount.Text = "Cash account";
                    break;
                case JournalFormView.Sales:
                case JournalFormView.Purchase:
                default:
                    break;
            }
        }
        public void InitBaseEntity()
        {
            BaseEntity.Validation = null;
            BaseEntity.Validation += dataLayoutControl1.Validate;

            BaseEntity.BindingSource = new BindingSource();
            BaseEntity.BindingSource = bindingSource;
            BaseEntity.TransactionType = transactionType;


            BaseEntity.BeforeSave += (e) =>
            {
                var journal = e as Journal;
                if (journal != null)
                {
                    var debitAccount = journal.JournalDetails.FirstOrDefault(a => a.Direction == JournalDetailDirection.Debit);
                    var creditAccount = journal.JournalDetails.FirstOrDefault(a => a.Direction == JournalDetailDirection.Credit);
                    debitAccount.Debit
                    = creditAccount.Credit
                    = journal.JournalPrice;

                    debitAccount.AccountID = DebitAccountGridLookupEdit.EditValue as Guid? ?? Guid.Empty;
                    creditAccount.AccountID = CreditAccountGridLookupEdit.EditValue as Guid? ?? Guid.Empty;
                }
                logInfoControl1.Focus();
            };
            BaseEntity.InitNew += AutoNumbering;
        }
        private void AutoNumbering(BaseEntity e)
        {
            var journal = e.CurrentEntity as Journal;
            if (journal != null)
            {
                var journalType = journalTypeGridLookUpEdit1.GetSelectedDataRow() as JournalType;
                if (journalType != null)
                    journal.JournalNumber = dbContext.Journals.Where(j => j.JournalTypeID == journalType.JournalTypeID)?.Max(a => (long?)a.JournalNumber) + 1 ?? 1;
            }
        }

        private void journalTypeGridLookUpEdit1_EditValueChanged(object sender, EventArgs e)
        {
            if (transactionType == TransactionType.Adding)
            {
                AutoNumbering(BaseEntity.CurrentEntity);
            }
        }
    }
}
